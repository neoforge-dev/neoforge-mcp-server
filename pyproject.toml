[project]
name = "python-server-mcp"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = "~=3.12"
dependencies = [
    "mcp[cli]>=1.5.0",
    "opentelemetry-api>=1.31.1",
    "opentelemetry-exporter-otlp>=1.31.1",
    "opentelemetry-sdk>=1.31.1",
    "psutil>=7.0.0",
    "PyYAML>=6.0.1",
    "tree-sitter>=0.24.0",
    "pytest>=7.4.0",
    "pluggy>=1.5",
    "iniconfig",
    "packaging",
    "pytest-cov>=4.1.0",
    "coverage",
    "pytest-mock>=3.11.1",
    "pytest-asyncio",
    "fastapi>=0.115.12",
    "python-digitalocean>=1.17.0",
    "itsdangerous>=2.0",
    "slowapi>=0.1.9",
    "structlog>=23.2.0",
    "python-json-logger>=2.0.0",
    "prometheus-client>=0.21.1",
    "python-jose[cryptography]>=3.3.0",
    "redis",
    "loguru",
    "dependency-injector",
    "tiktoken",
    "tree-sitter-languages>=1.10.2",
]

[project.optional-dependencies]
llm = [
    "torch>=2.2.0",
    "transformers>=4.38.0",
    "accelerate>=0.27.0",
    # "sentencepiece=="0.1.99"", # Temporarily removed for manual install
    "protobuf",
    "anthropic>=0.18.0",
    "openai>=1.12.0",
]

[tool.setuptools]
packages = ["server"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--verbose --maxfail=3 --tb=short --showlocals --no-header --cov=server --cov-report=term-missing --cov-report=html"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["server"]
omit = [
    "tests/*",
    "**/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "raise ImportError",
]
fail_under = 9

[dependency-groups]
dev = [
    "tree-sitter>=0.24.0",
]
